<Type Name="MockableMongoClusterArmClient" FullName="Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient">
  <TypeSignature Language="C#" Value="public class MockableMongoClusterArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMongoClusterArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMongoClusterArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMongoClusterArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMongoClusterArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterFirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource GetMongoClusterFirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource GetMongoClusterFirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterFirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoClusterFirewallRuleResource (id As ResourceIdentifier) As MongoClusterFirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoClusterFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource&#xA;override this.GetMongoClusterFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" Usage="mockableMongoClusterArmClient.GetMongoClusterFirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource GetMongoClusterPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource GetMongoClusterPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoClusterPrivateEndpointConnectionResource (id As ResourceIdentifier) As MongoClusterPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoClusterPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource&#xA;override this.GetMongoClusterPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" Usage="mockableMongoClusterArmClient.GetMongoClusterPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MongoCluster.MongoClusterResource GetMongoClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MongoCluster.MongoClusterResource GetMongoClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoClusterResource (id As ResourceIdentifier) As MongoClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterResource&#xA;override this.GetMongoClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterResource" Usage="mockableMongoClusterArmClient.GetMongoClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
