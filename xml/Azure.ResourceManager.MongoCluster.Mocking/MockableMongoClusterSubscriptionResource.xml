<Type Name="MockableMongoClusterSubscriptionResource" FullName="Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMongoClusterSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMongoClusterSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMongoClusterSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMongoClusterSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMongoClusterSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckMongoClusterNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt; CheckMongoClusterNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt; CheckMongoClusterNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMongoClusterNameAvailability (location As AzureLocation, content As MongoClusterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MongoClusterNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckMongoClusterNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&#xA;override this.CheckMongoClusterNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;" Usage="mockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The CheckAvailability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if mongo cluster name is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability</description></item><item><term>Operation Id</term><description>MongoClusters_CheckMongoClusterNameAvailability</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMongoClusterNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt; CheckMongoClusterNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt; CheckMongoClusterNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMongoClusterNameAvailabilityAsync (location As AzureLocation, content As MongoClusterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MongoClusterNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckMongoClusterNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt;&#xA;override this.CheckMongoClusterNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt;" Usage="mockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The CheckAvailability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if mongo cluster name is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability</description></item><item><term>Operation Id</term><description>MongoClusters_CheckMongoClusterNameAvailability</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.GetMongoClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoClusters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MongoClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMongoClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&#xA;override this.GetMongoClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;" Usage="mockableMongoClusterSubscriptionResource.GetMongoClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the mongo clusters in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters</description></item><item><term>Operation Id</term><description>MongoCluster_List</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClustersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.GetMongoClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MongoClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMongoClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&#xA;override this.GetMongoClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;" Usage="mockableMongoClusterSubscriptionResource.GetMongoClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the mongo clusters in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters</description></item><item><term>Operation Id</term><description>MongoCluster_List</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
